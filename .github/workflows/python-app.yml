# This workflow will install Python dependencies, run tests and lint with two versions of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest
    timeout-minutes: 5
    strategy:
      matrix:
        python-version: ['3.9', '3.10']

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        pip install --user pipenv
        pipenv install pytest
        pipenv install
        pipenv install exceptiongroup
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Turn on 'editable' mode
      run: |
        pipenv install -e .
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        pipenv run python -m pytest
  deliver:
    needs: [build]
    runs-on: ubuntu-latest
    environment: release
    permissions:
# IMPORTANT: this permission is mandatory for trusted publishing
      id-token: write
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@v3
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install --user pipenv
          pipenv install pytest
          pipenv install
          pipenv install tomli
      - name: Build package
        run: |
          pipenv install build
          pipenv run python -m build .
      - name: upload release to TestPyPI
          # Specifying a GitHub environment is optional, but strongly encouraged
      # retrieve your distributions here
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/
      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1